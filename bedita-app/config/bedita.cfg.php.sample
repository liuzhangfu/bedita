<?php
/*-----8<--------------------------------------------------------------------
 *
 * BEdita - a semantic content management framework
 *
 * Copyright 2008-2014 ChannelWeb Srl, Chialab Srl
 *
 * This file is part of BEdita: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * BEdita is distributed WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License
 * version 3 along with BEdita (see LICENSE.LGPL).
 * If not, see <http://gnu.org/licenses/lgpl-3.0.html>.
 *
 *------------------------------------------------------------------->8-----
 */

/**
 * bedita.cfg.php - local installation specific settings,
 *                  overrides settings in bedita.ini
 */

// BEdita instance name 
// $config["projectName"] = "BEdita";


//////////////////////////////////
//                              //
//    START - SERVER SETTINGS   //
//                              //
//////////////////////////////////


/**
 ** ******************************************
 **  FileSystem Paths, URIs, Files defaults
 ** ******************************************
 */

// BEdita URL
$config['beditaUrl']="http://localhost/bedita";

/** Multimedia - root folder on filesystem (use absolute path, if you need to change it)
 **
 ** On Linux could be /var/www/bedita/bedita-app/webroot/files
 ** On Windows could be C:\\xampp\\htdocs\\bedita\\bedita-app\\webroot\\files
 ** Or you can use DS as crossplatform directory separator as in default
 ** BEDITA_CORE_PATH . DS . "webroot" . DS . "files"
 ** where BEDITA_CORE_PATH points to bedita/bedita_app dir
 */
$config['mediaRoot'] = BEDITA_CORE_PATH . DS . "webroot" . DS . "files";

// Multimedia - URL prefix (without trailing slash)
$config['mediaUrl'] = $config['beditaUrl'] . '/files';

// alternative frontends path (absolute path)
//define('BEDITA_FRONTENDS_PATH', '/var/www/bedita/bedita-frontends');

// alternative bedita modules path (absolute path)
//define('BEDITA_MODULES_PATH', '/var/www/bedita/bedita-plugins');

// alternative bedita addons path (absolute path)
//define('BEDITA_ADDONS_PATH', '/var/www/bedita/bedita-addons');


/**
 ** ******************************************
 **  Override system locales
 **  defaults are in config/locales.php
 ** ******************************************
 */

//$config["locales"] = array(
//  'eng' => array('en_US.UTF8','en_US.UTF-8'),
//  );


/**
 ** ******************************************
 **  SMTP and mail support settings
 ** ******************************************
 */
 
// default email fields -- override in bedita.cfg or bedita.sys
//$config['mailOptions'] = array(
//    "sender" => "noreply@bedita.com",
//    "reply_to" => "noreply@bedita.com",
//    "signature" => "powered by BEdita - http://www.bedita.com",
//);

 
 
/** 
 ** smtp server configuration used for any kind of mail (notifications, newsletters, etc...)
 */
//$config['smtpOptions'] = array(
//  'port' => '25',
//  'timeout' => '30',
//  'host' => 'your.smtp.server',
//  'username' => 'your_smtp_username',
//  'password' => 'your_smtp_password'
//);

/**
 * mail support configuration
 * uncomment and fill to send error messages to your support
 */
//$config["mailSupport"] = array(
//  "from" => "bedita-support@...", 
//  'to' => "bedita-support@...",
//  'subject' => "[bedita] error message",
//);

//////////////////////////////////
//                              //
//     END - SERVER SETTINGS    //
//                              //
//////////////////////////////////


/**
 ** ******************************************
 **  Content and UI Elements defaults
 ** ******************************************
 */

// default user interface lang - backend
//$config['defaultUILang'] = "eng";

// default object language
// $config['defaultLang'] = "eng";

// ISO-639-3 codes - User interface language options (backend)
// $config['langsSystem'] = array(
//  "eng"   => "english",
//  "ita"   => "italiano",
//  "deu"   => "deutsch",
//  "por"   => "portuguÄ›s"
// );

/**
 * Lang selection options ISO-639-3 - Language options for contents
 */
//$config['langOptions'] = array(
//  "ita"   => "italiano",
//  "eng"   => "english",
//  "spa"   => "espa&ntilde;ol",
//  "por"   => "portugu&ecirc;s",
//  "fra"   => "fran&ccedil;ais",
//  "deu"   => "deutsch"
//) ;


// add langs.iso.php to language options for content 
//$config['langOptionsIso'] = false; 


// Status of new objects
//$config['defaultStatus'] = "draft" ;

/**
 * Rich Text Editor conf (default ckeditor conf is defined in bedita.ini.php)
 *
 * Example to use tinyMCE
 * name => 'tinymce'
 * conf => 'tiny_mce_default_init'
 */
// $config['richtexteditor'] = array(
//  'name' => 'ckeditor',
//  'conf' => 'ckeditor_default_init'
// );

// Activate short text (abstract) for documents
//$config['addShortText'] = true;

/**
 ** ******************************************
 **  Login (backend) and Security Policies
 ** ******************************************
 */
//
// A simple example with a simple password regexp rule, uncomment and change according to your needs
//
//$config['loginPolicy'] = array (
//  "maxLoginAttempts" => 3,
//  "maxNumDaysInactivity" => 60,
//  "maxNumDaysValidity" => 10,
//  "passwordRule" => "/\w{4,}/", // regexp to match for valid passwords (empty => no regexp)
//  "passwordErrorMessage" => "Password must contain at least 4 valid alphanumeric characters", // error message for passwrds not matching given regexp
//);

/**
 ** ******************************************
 **  Exceptions Configuration
 ** ******************************************
 */

/**
 * Configure the Exception handler used for uncaught exceptions. By default,
 * BeExceptionHandler::handleException() is used.
 *
 * To use your custom exception handler class put it in app/libs/errors directory
 *
 * Options:
 *
 * - `handler` The Exceptions handler. It must contain
 *  - `class` The Exceptions handler class name
 *  - `method` The Exceptions handler class method
 */
// $config['Exception'] = array(
//     'handler' => array(
//         'class' => 'BeExceptionHandler',
//         'method' => 'handleExceptions' // it must be static
//     )
// );

/**
 ** ******************************************
 **  External Authentication Services Params
 ** ******************************************
 */
//$config['extAuthParams'] = array(
//    'facebook' => array(
//        'keys' => array(
//            'appId' => '',
//            'secret' => ''
//        )
//    ),
//    'twitter' => array(
//        'keys' => array(
//            'appId' => '',
//            'secret' => ''
//        )
//    ),
//    'google' => array(
//        'keys' => array(
//            'appId' => '',
//            'secret' => ''
//        )
//    )
//);

/**
 ** ******************************************
 **  Local installation specific settings
 ** ******************************************
 */

/**
 ** Relations - local objects' relation types
 ** define here custom semantic relations
 */
// $config["objRelationType"] = array(
//      "language" => array()
// );

// Reserved words [avoided in nickname creation]
// $config["cfgReservedWords"] = array();

// default values for fulltext search
// $config['searchFields'] = array(
//  'ModelName' => array('title'=> 6, 'description' => 4),
//) ;


// specific css filename for newsletter templates
//$config['newsletterCss'] = "base.css";

/**
 * save history navigation
 *
 * "sessionEntry" => number of history items in session
 * "showDuplicates" => false to not show duplicates in history session 
 * "trackNotLogged" => true save history for all users (not logged too)
 */
//$config["history"] = array(
//  "sessionEntry" => 5,
//  "showDuplicates" => false,
//  "trackNotLogged" => false
//);

/**
 * Uncomment to use object cache in frontends
 *
 * BEdita objects data will be cached to fast frontend access.
 * The object cache is invalidate when an object is saved/deleted from backend or frontend.
 * Once activate, default cache config used is defined in bedita-app/libs/be_object_cache.php,
 * if you want to use another config you have to define one named 'objects' in core.php of backend and frontends.
 * The custom config has to be the same for backend and frontend.
 */
// $config['objectCakeCache'] = true;

/**
 * Revision control systems config
 */
// $config['rcs'] = array(
//   'svn' => array(
//     'username' => '',
//     'password' => ''
//   )
// );
